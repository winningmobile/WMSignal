// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "IncomingPushMessageSignal.pb.h"
// @@protoc_insertion_point(imports)

@implementation IncomingPushMessageSignalRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [IncomingPushMessageSignalRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface IncomingPushMessageSignal ()
@property IncomingPushMessageSignalType type;
@property (strong) NSString* source;
@property UInt32 sourceDevice;
@property (strong) NSString* relay;
@property UInt64 timestamp;
@property (strong) NSData* message;
@end

@implementation IncomingPushMessageSignal

- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) value_ {
  hasType_ = !!value_;
}
@synthesize type;
- (BOOL) hasSource {
  return !!hasSource_;
}
- (void) setHasSource:(BOOL) value_ {
  hasSource_ = !!value_;
}
@synthesize source;
- (BOOL) hasSourceDevice {
  return !!hasSourceDevice_;
}
- (void) setHasSourceDevice:(BOOL) value_ {
  hasSourceDevice_ = !!value_;
}
@synthesize sourceDevice;
- (BOOL) hasRelay {
  return !!hasRelay_;
}
- (void) setHasRelay:(BOOL) value_ {
  hasRelay_ = !!value_;
}
@synthesize relay;
- (BOOL) hasTimestamp {
  return !!hasTimestamp_;
}
- (void) setHasTimestamp:(BOOL) value_ {
  hasTimestamp_ = !!value_;
}
@synthesize timestamp;
- (BOOL) hasMessage {
  return !!hasMessage_;
}
- (void) setHasMessage:(BOOL) value_ {
  hasMessage_ = !!value_;
}
@synthesize message;
- (id) init {
  if ((self = [super init])) {
    self.type = IncomingPushMessageSignalTypeUnknown;
    self.source = @"";
    self.sourceDevice = 0;
    self.relay = @"";
    self.timestamp = 0L;
    self.message = [NSData data];
  }
  return self;
}
static IncomingPushMessageSignal* defaultIncomingPushMessageSignalInstance = nil;
+ (void) initialize {
  if (self == [IncomingPushMessageSignal class]) {
    defaultIncomingPushMessageSignalInstance = [[IncomingPushMessageSignal alloc] init];
  }
}
+ (IncomingPushMessageSignal*) defaultInstance {
  return defaultIncomingPushMessageSignalInstance;
}
- (IncomingPushMessageSignal*) defaultInstance {
  return defaultIncomingPushMessageSignalInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasType) {
    [output writeEnum:1 value:self.type];
  }
  if (self.hasSource) {
    [output writeString:2 value:self.source];
  }
  if (self.hasRelay) {
    [output writeString:3 value:self.relay];
  }
  if (self.hasTimestamp) {
    [output writeUInt64:5 value:self.timestamp];
  }
  if (self.hasMessage) {
    [output writeData:6 value:self.message];
  }
  if (self.hasSourceDevice) {
    [output writeUInt32:7 value:self.sourceDevice];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasType) {
    size_ += computeEnumSize(1, self.type);
  }
  if (self.hasSource) {
    size_ += computeStringSize(2, self.source);
  }
  if (self.hasRelay) {
    size_ += computeStringSize(3, self.relay);
  }
  if (self.hasTimestamp) {
    size_ += computeUInt64Size(5, self.timestamp);
  }
  if (self.hasMessage) {
    size_ += computeDataSize(6, self.message);
  }
  if (self.hasSourceDevice) {
    size_ += computeUInt32Size(7, self.sourceDevice);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (IncomingPushMessageSignal*) parseFromData:(NSData*) data {
  return (IncomingPushMessageSignal*)[[[IncomingPushMessageSignal builder] mergeFromData:data] build];
}
+ (IncomingPushMessageSignal*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (IncomingPushMessageSignal*)[[[IncomingPushMessageSignal builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (IncomingPushMessageSignal*) parseFromInputStream:(NSInputStream*) input {
  return (IncomingPushMessageSignal*)[[[IncomingPushMessageSignal builder] mergeFromInputStream:input] build];
}
+ (IncomingPushMessageSignal*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (IncomingPushMessageSignal*)[[[IncomingPushMessageSignal builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (IncomingPushMessageSignal*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (IncomingPushMessageSignal*)[[[IncomingPushMessageSignal builder] mergeFromCodedInputStream:input] build];
}
+ (IncomingPushMessageSignal*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (IncomingPushMessageSignal*)[[[IncomingPushMessageSignal builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (IncomingPushMessageSignalBuilder*) builder {
  return [[IncomingPushMessageSignalBuilder alloc] init];
}
+ (IncomingPushMessageSignalBuilder*) builderWithPrototype:(IncomingPushMessageSignal*) prototype {
  return [[IncomingPushMessageSignal builder] mergeFrom:prototype];
}
- (IncomingPushMessageSignalBuilder*) builder {
  return [IncomingPushMessageSignal builder];
}
- (IncomingPushMessageSignalBuilder*) toBuilder {
  return [IncomingPushMessageSignal builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasType) {
    [output appendFormat:@"%@%@: %d\n", indent, @"type", self.type];
  }
  if (self.hasSource) {
    [output appendFormat:@"%@%@: %@\n", indent, @"source", self.source];
  }
  if (self.hasRelay) {
    [output appendFormat:@"%@%@: %@\n", indent, @"relay", self.relay];
  }
  if (self.hasTimestamp) {
    [output appendFormat:@"%@%@: %@\n", indent, @"timestamp", [NSNumber numberWithLongLong:self.timestamp]];
  }
  if (self.hasMessage) {
    [output appendFormat:@"%@%@: %@\n", indent, @"message", self.message];
  }
  if (self.hasSourceDevice) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sourceDevice", [NSNumber numberWithInteger:self.sourceDevice]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[IncomingPushMessageSignal class]]) {
    return NO;
  }
  IncomingPushMessageSignal *otherMessage = other;
  return
      self.hasType == otherMessage.hasType &&
      (!self.hasType || self.type == otherMessage.type) &&
      self.hasSource == otherMessage.hasSource &&
      (!self.hasSource || [self.source isEqual:otherMessage.source]) &&
      self.hasRelay == otherMessage.hasRelay &&
      (!self.hasRelay || [self.relay isEqual:otherMessage.relay]) &&
      self.hasTimestamp == otherMessage.hasTimestamp &&
      (!self.hasTimestamp || self.timestamp == otherMessage.timestamp) &&
      self.hasMessage == otherMessage.hasMessage &&
      (!self.hasMessage || [self.message isEqual:otherMessage.message]) &&
      self.hasSourceDevice == otherMessage.hasSourceDevice &&
      (!self.hasSourceDevice || self.sourceDevice == otherMessage.sourceDevice) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasType) {
    hashCode = hashCode * 31 + self.type;
  }
  if (self.hasSource) {
    hashCode = hashCode * 31 + [self.source hash];
  }
  if (self.hasRelay) {
    hashCode = hashCode * 31 + [self.relay hash];
  }
  if (self.hasTimestamp) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.timestamp] hash];
  }
  if (self.hasMessage) {
    hashCode = hashCode * 31 + [self.message hash];
  }
  if (self.hasSourceDevice) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.sourceDevice] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL IncomingPushMessageSignalTypeIsValidValue(IncomingPushMessageSignalType value) {
  switch (value) {
    case IncomingPushMessageSignalTypeUnknown:
    case IncomingPushMessageSignalTypeCiphertext:
    case IncomingPushMessageSignalTypeKeyExchange:
    case IncomingPushMessageSignalTypePrekeyBundle:
    case IncomingPushMessageSignalTypePlaintext:
    case IncomingPushMessageSignalTypeReceipt:
      return YES;
    default:
      return NO;
  }
}
@interface IncomingPushMessageSignalBuilder()
@property (strong) IncomingPushMessageSignal* result;
@end

@implementation IncomingPushMessageSignalBuilder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[IncomingPushMessageSignal alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (IncomingPushMessageSignalBuilder*) clear {
  self.result = [[IncomingPushMessageSignal alloc] init];
  return self;
}
- (IncomingPushMessageSignalBuilder*) clone {
  return [IncomingPushMessageSignal builderWithPrototype:result];
}
- (IncomingPushMessageSignal*) defaultInstance {
  return [IncomingPushMessageSignal defaultInstance];
}
- (IncomingPushMessageSignal*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (IncomingPushMessageSignal*) buildPartial {
  IncomingPushMessageSignal* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (IncomingPushMessageSignalBuilder*) mergeFrom:(IncomingPushMessageSignal*) other {
  if (other == [IncomingPushMessageSignal defaultInstance]) {
    return self;
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  if (other.hasSource) {
    [self setSource:other.source];
  }
  if (other.hasSourceDevice) {
    [self setSourceDevice:other.sourceDevice];
  }
  if (other.hasRelay) {
    [self setRelay:other.relay];
  }
  if (other.hasTimestamp) {
    [self setTimestamp:other.timestamp];
  }
  if (other.hasMessage) {
    [self setMessage:other.message];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (IncomingPushMessageSignalBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (IncomingPushMessageSignalBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        IncomingPushMessageSignalType value = (IncomingPushMessageSignalType)[input readEnum];
        if (IncomingPushMessageSignalTypeIsValidValue(value)) {
          [self setType:value];
        } else {
          [unknownFields mergeVarintField:1 value:value];
        }
        break;
      }
      case 18: {
        [self setSource:[input readString]];
        break;
      }
      case 26: {
        [self setRelay:[input readString]];
        break;
      }
      case 40: {
        [self setTimestamp:[input readUInt64]];
        break;
      }
      case 50: {
        [self setMessage:[input readData]];
        break;
      }
      case 56: {
        [self setSourceDevice:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasType {
  return result.hasType;
}
- (IncomingPushMessageSignalType) type {
  return result.type;
}
- (IncomingPushMessageSignalBuilder*) setType:(IncomingPushMessageSignalType) value {
  result.hasType = YES;
  result.type = value;
  return self;
}
- (IncomingPushMessageSignalBuilder*) clearType {
  result.hasType = NO;
  result.type = IncomingPushMessageSignalTypeUnknown;
  return self;
}
- (BOOL) hasSource {
  return result.hasSource;
}
- (NSString*) source {
  return result.source;
}
- (IncomingPushMessageSignalBuilder*) setSource:(NSString*) value {
  result.hasSource = YES;
  result.source = value;
  return self;
}
- (IncomingPushMessageSignalBuilder*) clearSource {
  result.hasSource = NO;
  result.source = @"";
  return self;
}
- (BOOL) hasSourceDevice {
  return result.hasSourceDevice;
}
- (UInt32) sourceDevice {
  return result.sourceDevice;
}
- (IncomingPushMessageSignalBuilder*) setSourceDevice:(UInt32) value {
  result.hasSourceDevice = YES;
  result.sourceDevice = value;
  return self;
}
- (IncomingPushMessageSignalBuilder*) clearSourceDevice {
  result.hasSourceDevice = NO;
  result.sourceDevice = 0;
  return self;
}
- (BOOL) hasRelay {
  return result.hasRelay;
}
- (NSString*) relay {
  return result.relay;
}
- (IncomingPushMessageSignalBuilder*) setRelay:(NSString*) value {
  result.hasRelay = YES;
  result.relay = value;
  return self;
}
- (IncomingPushMessageSignalBuilder*) clearRelay {
  result.hasRelay = NO;
  result.relay = @"";
  return self;
}
- (BOOL) hasTimestamp {
  return result.hasTimestamp;
}
- (UInt64) timestamp {
  return result.timestamp;
}
- (IncomingPushMessageSignalBuilder*) setTimestamp:(UInt64) value {
  result.hasTimestamp = YES;
  result.timestamp = value;
  return self;
}
- (IncomingPushMessageSignalBuilder*) clearTimestamp {
  result.hasTimestamp = NO;
  result.timestamp = 0L;
  return self;
}
- (BOOL) hasMessage {
  return result.hasMessage;
}
- (NSData*) message {
  return result.message;
}
- (IncomingPushMessageSignalBuilder*) setMessage:(NSData*) value {
  result.hasMessage = YES;
  result.message = value;
  return self;
}
- (IncomingPushMessageSignalBuilder*) clearMessage {
  result.hasMessage = NO;
  result.message = [NSData data];
  return self;
}
@end

@interface PushMessageContent ()
@property (strong) NSString* body;
@property (strong) NSMutableArray * attachmentsArray;
@property (strong) PushMessageContentGroupContext* group;
@property UInt32 flags;
@end

@implementation PushMessageContent

- (BOOL) hasBody {
  return !!hasBody_;
}
- (void) setHasBody:(BOOL) value_ {
  hasBody_ = !!value_;
}
@synthesize body;
@synthesize attachmentsArray;
@dynamic attachments;
- (BOOL) hasGroup {
  return !!hasGroup_;
}
- (void) setHasGroup:(BOOL) value_ {
  hasGroup_ = !!value_;
}
@synthesize group;
- (BOOL) hasFlags {
  return !!hasFlags_;
}
- (void) setHasFlags:(BOOL) value_ {
  hasFlags_ = !!value_;
}
@synthesize flags;
- (id) init {
  if ((self = [super init])) {
    self.body = @"";
    self.group = [PushMessageContentGroupContext defaultInstance];
    self.flags = 0;
  }
  return self;
}
static PushMessageContent* defaultPushMessageContentInstance = nil;
+ (void) initialize {
  if (self == [PushMessageContent class]) {
    defaultPushMessageContentInstance = [[PushMessageContent alloc] init];
  }
}
+ (PushMessageContent*) defaultInstance {
  return defaultPushMessageContentInstance;
}
- (PushMessageContent*) defaultInstance {
  return defaultPushMessageContentInstance;
}
- (NSArray *)attachments {
  return attachmentsArray;
}
- (PushMessageContentAttachmentPointer*)attachmentsAtIndex:(NSUInteger)index {
  return [attachmentsArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasBody) {
    [output writeString:1 value:self.body];
  }
  [self.attachmentsArray enumerateObjectsUsingBlock:^(PushMessageContentAttachmentPointer *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:2 value:element];
  }];
  if (self.hasGroup) {
    [output writeMessage:3 value:self.group];
  }
  if (self.hasFlags) {
    [output writeUInt32:4 value:self.flags];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasBody) {
    size_ += computeStringSize(1, self.body);
  }
  [self.attachmentsArray enumerateObjectsUsingBlock:^(PushMessageContentAttachmentPointer *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(2, element);
  }];
  if (self.hasGroup) {
    size_ += computeMessageSize(3, self.group);
  }
  if (self.hasFlags) {
    size_ += computeUInt32Size(4, self.flags);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PushMessageContent*) parseFromData:(NSData*) data {
  return (PushMessageContent*)[[[PushMessageContent builder] mergeFromData:data] build];
}
+ (PushMessageContent*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PushMessageContent*)[[[PushMessageContent builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PushMessageContent*) parseFromInputStream:(NSInputStream*) input {
  return (PushMessageContent*)[[[PushMessageContent builder] mergeFromInputStream:input] build];
}
+ (PushMessageContent*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PushMessageContent*)[[[PushMessageContent builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PushMessageContent*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PushMessageContent*)[[[PushMessageContent builder] mergeFromCodedInputStream:input] build];
}
+ (PushMessageContent*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PushMessageContent*)[[[PushMessageContent builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PushMessageContentBuilder*) builder {
  return [[PushMessageContentBuilder alloc] init];
}
+ (PushMessageContentBuilder*) builderWithPrototype:(PushMessageContent*) prototype {
  return [[PushMessageContent builder] mergeFrom:prototype];
}
- (PushMessageContentBuilder*) builder {
  return [PushMessageContent builder];
}
- (PushMessageContentBuilder*) toBuilder {
  return [PushMessageContent builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasBody) {
    [output appendFormat:@"%@%@: %@\n", indent, @"body", self.body];
  }
  [self.attachmentsArray enumerateObjectsUsingBlock:^(PushMessageContentAttachmentPointer *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"attachments"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasGroup) {
    [output appendFormat:@"%@%@ {\n", indent, @"group"];
    [self.group writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasFlags) {
    [output appendFormat:@"%@%@: %@\n", indent, @"flags", [NSNumber numberWithInteger:self.flags]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PushMessageContent class]]) {
    return NO;
  }
  PushMessageContent *otherMessage = other;
  return
      self.hasBody == otherMessage.hasBody &&
      (!self.hasBody || [self.body isEqual:otherMessage.body]) &&
      [self.attachmentsArray isEqualToArray:otherMessage.attachmentsArray] &&
      self.hasGroup == otherMessage.hasGroup &&
      (!self.hasGroup || [self.group isEqual:otherMessage.group]) &&
      self.hasFlags == otherMessage.hasFlags &&
      (!self.hasFlags || self.flags == otherMessage.flags) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasBody) {
    hashCode = hashCode * 31 + [self.body hash];
  }
  [self.attachmentsArray enumerateObjectsUsingBlock:^(PushMessageContentAttachmentPointer *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasGroup) {
    hashCode = hashCode * 31 + [self.group hash];
  }
  if (self.hasFlags) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.flags] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL PushMessageContentFlagsIsValidValue(PushMessageContentFlags value) {
  switch (value) {
    case PushMessageContentFlagsEndSession:
      return YES;
    default:
      return NO;
  }
}
@interface PushMessageContentAttachmentPointer ()
@property UInt64 id;
@property (strong) NSString* contentType;
@property (strong) NSData* key;
@end

@implementation PushMessageContentAttachmentPointer

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) value_ {
  hasId_ = !!value_;
}
@synthesize id;
- (BOOL) hasContentType {
  return !!hasContentType_;
}
- (void) setHasContentType:(BOOL) value_ {
  hasContentType_ = !!value_;
}
@synthesize contentType;
- (BOOL) hasKey {
  return !!hasKey_;
}
- (void) setHasKey:(BOOL) value_ {
  hasKey_ = !!value_;
}
@synthesize key;
- (id) init {
  if ((self = [super init])) {
    self.id = 0L;
    self.contentType = @"";
    self.key = [NSData data];
  }
  return self;
}
static PushMessageContentAttachmentPointer* defaultPushMessageContentAttachmentPointerInstance = nil;
+ (void) initialize {
  if (self == [PushMessageContentAttachmentPointer class]) {
    defaultPushMessageContentAttachmentPointerInstance = [[PushMessageContentAttachmentPointer alloc] init];
  }
}
+ (PushMessageContentAttachmentPointer*) defaultInstance {
  return defaultPushMessageContentAttachmentPointerInstance;
}
- (PushMessageContentAttachmentPointer*) defaultInstance {
  return defaultPushMessageContentAttachmentPointerInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeFixed64:1 value:self.id];
  }
  if (self.hasContentType) {
    [output writeString:2 value:self.contentType];
  }
  if (self.hasKey) {
    [output writeData:3 value:self.key];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasId) {
    size_ += computeFixed64Size(1, self.id);
  }
  if (self.hasContentType) {
    size_ += computeStringSize(2, self.contentType);
  }
  if (self.hasKey) {
    size_ += computeDataSize(3, self.key);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PushMessageContentAttachmentPointer*) parseFromData:(NSData*) data {
  return (PushMessageContentAttachmentPointer*)[[[PushMessageContentAttachmentPointer builder] mergeFromData:data] build];
}
+ (PushMessageContentAttachmentPointer*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PushMessageContentAttachmentPointer*)[[[PushMessageContentAttachmentPointer builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PushMessageContentAttachmentPointer*) parseFromInputStream:(NSInputStream*) input {
  return (PushMessageContentAttachmentPointer*)[[[PushMessageContentAttachmentPointer builder] mergeFromInputStream:input] build];
}
+ (PushMessageContentAttachmentPointer*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PushMessageContentAttachmentPointer*)[[[PushMessageContentAttachmentPointer builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PushMessageContentAttachmentPointer*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PushMessageContentAttachmentPointer*)[[[PushMessageContentAttachmentPointer builder] mergeFromCodedInputStream:input] build];
}
+ (PushMessageContentAttachmentPointer*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PushMessageContentAttachmentPointer*)[[[PushMessageContentAttachmentPointer builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PushMessageContentAttachmentPointerBuilder*) builder {
  return [[PushMessageContentAttachmentPointerBuilder alloc] init];
}
+ (PushMessageContentAttachmentPointerBuilder*) builderWithPrototype:(PushMessageContentAttachmentPointer*) prototype {
  return [[PushMessageContentAttachmentPointer builder] mergeFrom:prototype];
}
- (PushMessageContentAttachmentPointerBuilder*) builder {
  return [PushMessageContentAttachmentPointer builder];
}
- (PushMessageContentAttachmentPointerBuilder*) toBuilder {
  return [PushMessageContentAttachmentPointer builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithLongLong:self.id]];
  }
  if (self.hasContentType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"contentType", self.contentType];
  }
  if (self.hasKey) {
    [output appendFormat:@"%@%@: %@\n", indent, @"key", self.key];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PushMessageContentAttachmentPointer class]]) {
    return NO;
  }
  PushMessageContentAttachmentPointer *otherMessage = other;
  return
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      self.hasContentType == otherMessage.hasContentType &&
      (!self.hasContentType || [self.contentType isEqual:otherMessage.contentType]) &&
      self.hasKey == otherMessage.hasKey &&
      (!self.hasKey || [self.key isEqual:otherMessage.key]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.id] hash];
  }
  if (self.hasContentType) {
    hashCode = hashCode * 31 + [self.contentType hash];
  }
  if (self.hasKey) {
    hashCode = hashCode * 31 + [self.key hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PushMessageContentAttachmentPointerBuilder()
@property (strong) PushMessageContentAttachmentPointer* result;
@end

@implementation PushMessageContentAttachmentPointerBuilder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[PushMessageContentAttachmentPointer alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PushMessageContentAttachmentPointerBuilder*) clear {
  self.result = [[PushMessageContentAttachmentPointer alloc] init];
  return self;
}
- (PushMessageContentAttachmentPointerBuilder*) clone {
  return [PushMessageContentAttachmentPointer builderWithPrototype:result];
}
- (PushMessageContentAttachmentPointer*) defaultInstance {
  return [PushMessageContentAttachmentPointer defaultInstance];
}
- (PushMessageContentAttachmentPointer*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PushMessageContentAttachmentPointer*) buildPartial {
  PushMessageContentAttachmentPointer* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (PushMessageContentAttachmentPointerBuilder*) mergeFrom:(PushMessageContentAttachmentPointer*) other {
  if (other == [PushMessageContentAttachmentPointer defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasContentType) {
    [self setContentType:other.contentType];
  }
  if (other.hasKey) {
    [self setKey:other.key];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PushMessageContentAttachmentPointerBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PushMessageContentAttachmentPointerBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 9: {
        [self setId:[input readFixed64]];
        break;
      }
      case 18: {
        [self setContentType:[input readString]];
        break;
      }
      case 26: {
        [self setKey:[input readData]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return result.hasId;
}
- (UInt64) id {
  return result.id;
}
- (PushMessageContentAttachmentPointerBuilder*) setId:(UInt64) value {
  result.hasId = YES;
  result.id = value;
  return self;
}
- (PushMessageContentAttachmentPointerBuilder*) clearId {
  result.hasId = NO;
  result.id = 0L;
  return self;
}
- (BOOL) hasContentType {
  return result.hasContentType;
}
- (NSString*) contentType {
  return result.contentType;
}
- (PushMessageContentAttachmentPointerBuilder*) setContentType:(NSString*) value {
  result.hasContentType = YES;
  result.contentType = value;
  return self;
}
- (PushMessageContentAttachmentPointerBuilder*) clearContentType {
  result.hasContentType = NO;
  result.contentType = @"";
  return self;
}
- (BOOL) hasKey {
  return result.hasKey;
}
- (NSData*) key {
  return result.key;
}
- (PushMessageContentAttachmentPointerBuilder*) setKey:(NSData*) value {
  result.hasKey = YES;
  result.key = value;
  return self;
}
- (PushMessageContentAttachmentPointerBuilder*) clearKey {
  result.hasKey = NO;
  result.key = [NSData data];
  return self;
}
@end

@interface PushMessageContentGroupContext ()
@property (strong) NSData* id;
@property PushMessageContentGroupContextType type;
@property (strong) NSString* name;
@property (strong) NSMutableArray * membersArray;
@property (strong) PushMessageContentAttachmentPointer* avatar;
@end

@implementation PushMessageContentGroupContext

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) value_ {
  hasId_ = !!value_;
}
@synthesize id;
- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) value_ {
  hasType_ = !!value_;
}
@synthesize type;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value_ {
  hasName_ = !!value_;
}
@synthesize name;
@synthesize membersArray;
- (BOOL) hasAvatar {
  return !!hasAvatar_;
}
- (void) setHasAvatar:(BOOL) value_ {
  hasAvatar_ = !!value_;
}
@synthesize avatar;
- (id) init {
  if ((self = [super init])) {
    self.id = [NSData data];
    self.type = PushMessageContentGroupContextTypeUnknown;
    self.name = @"";
    self.avatar = [PushMessageContentAttachmentPointer defaultInstance];
  }
  return self;
}
static PushMessageContentGroupContext* defaultPushMessageContentGroupContextInstance = nil;
+ (void) initialize {
  if (self == [PushMessageContentGroupContext class]) {
    defaultPushMessageContentGroupContextInstance = [[PushMessageContentGroupContext alloc] init];
  }
}
+ (PushMessageContentGroupContext*) defaultInstance {
  return defaultPushMessageContentGroupContextInstance;
}
- (PushMessageContentGroupContext*) defaultInstance {
  return defaultPushMessageContentGroupContextInstance;
}
- (NSArray *)members {
  return membersArray;
}
- (NSString*)membersAtIndex:(NSUInteger)index {
  return [membersArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeData:1 value:self.id];
  }
  if (self.hasType) {
    [output writeEnum:2 value:self.type];
  }
  if (self.hasName) {
    [output writeString:3 value:self.name];
  }
  [self.membersArray enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
    [output writeString:4 value:element];
  }];
  if (self.hasAvatar) {
    [output writeMessage:5 value:self.avatar];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasId) {
    size_ += computeDataSize(1, self.id);
  }
  if (self.hasType) {
    size_ += computeEnumSize(2, self.type);
  }
  if (self.hasName) {
    size_ += computeStringSize(3, self.name);
  }
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.membersArray.count;
    [self.membersArray enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
      dataSize += computeStringSizeNoTag(element);
    }];
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  if (self.hasAvatar) {
    size_ += computeMessageSize(5, self.avatar);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PushMessageContentGroupContext*) parseFromData:(NSData*) data {
  return (PushMessageContentGroupContext*)[[[PushMessageContentGroupContext builder] mergeFromData:data] build];
}
+ (PushMessageContentGroupContext*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PushMessageContentGroupContext*)[[[PushMessageContentGroupContext builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PushMessageContentGroupContext*) parseFromInputStream:(NSInputStream*) input {
  return (PushMessageContentGroupContext*)[[[PushMessageContentGroupContext builder] mergeFromInputStream:input] build];
}
+ (PushMessageContentGroupContext*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PushMessageContentGroupContext*)[[[PushMessageContentGroupContext builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PushMessageContentGroupContext*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PushMessageContentGroupContext*)[[[PushMessageContentGroupContext builder] mergeFromCodedInputStream:input] build];
}
+ (PushMessageContentGroupContext*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PushMessageContentGroupContext*)[[[PushMessageContentGroupContext builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PushMessageContentGroupContextBuilder*) builder {
  return [[PushMessageContentGroupContextBuilder alloc] init];
}
+ (PushMessageContentGroupContextBuilder*) builderWithPrototype:(PushMessageContentGroupContext*) prototype {
  return [[PushMessageContentGroupContext builder] mergeFrom:prototype];
}
- (PushMessageContentGroupContextBuilder*) builder {
  return [PushMessageContentGroupContext builder];
}
- (PushMessageContentGroupContextBuilder*) toBuilder {
  return [PushMessageContentGroupContext builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", self.id];
  }
  if (self.hasType) {
    [output appendFormat:@"%@%@: %d\n", indent, @"type", self.type];
  }
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  [self.membersArray enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"members", obj];
  }];
  if (self.hasAvatar) {
    [output appendFormat:@"%@%@ {\n", indent, @"avatar"];
    [self.avatar writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PushMessageContentGroupContext class]]) {
    return NO;
  }
  PushMessageContentGroupContext *otherMessage = other;
  return
      self.hasId == otherMessage.hasId &&
      (!self.hasId || [self.id isEqual:otherMessage.id]) &&
      self.hasType == otherMessage.hasType &&
      (!self.hasType || self.type == otherMessage.type) &&
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      [self.membersArray isEqualToArray:otherMessage.membersArray] &&
      self.hasAvatar == otherMessage.hasAvatar &&
      (!self.hasAvatar || [self.avatar isEqual:otherMessage.avatar]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasId) {
    hashCode = hashCode * 31 + [self.id hash];
  }
  if (self.hasType) {
    hashCode = hashCode * 31 + self.type;
  }
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  [self.membersArray enumerateObjectsUsingBlock:^(id element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasAvatar) {
    hashCode = hashCode * 31 + [self.avatar hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL PushMessageContentGroupContextTypeIsValidValue(PushMessageContentGroupContextType value) {
  switch (value) {
    case PushMessageContentGroupContextTypeUnknown:
    case PushMessageContentGroupContextTypeUpdate:
    case PushMessageContentGroupContextTypeDeliver:
    case PushMessageContentGroupContextTypeQuit:
      return YES;
    default:
      return NO;
  }
}
@interface PushMessageContentGroupContextBuilder()
@property (strong) PushMessageContentGroupContext* result;
@end

@implementation PushMessageContentGroupContextBuilder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[PushMessageContentGroupContext alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PushMessageContentGroupContextBuilder*) clear {
  self.result = [[PushMessageContentGroupContext alloc] init];
  return self;
}
- (PushMessageContentGroupContextBuilder*) clone {
  return [PushMessageContentGroupContext builderWithPrototype:result];
}
- (PushMessageContentGroupContext*) defaultInstance {
  return [PushMessageContentGroupContext defaultInstance];
}
- (PushMessageContentGroupContext*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PushMessageContentGroupContext*) buildPartial {
  PushMessageContentGroupContext* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (PushMessageContentGroupContextBuilder*) mergeFrom:(PushMessageContentGroupContext*) other {
  if (other == [PushMessageContentGroupContext defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.membersArray.count > 0) {
    if (result.membersArray == nil) {
      result.membersArray = [[NSMutableArray alloc] initWithArray:other.membersArray];
    } else {
      [result.membersArray addObjectsFromArray:other.membersArray];
    }
  }
  if (other.hasAvatar) {
    [self mergeAvatar:other.avatar];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PushMessageContentGroupContextBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PushMessageContentGroupContextBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setId:[input readData]];
        break;
      }
      case 16: {
        PushMessageContentGroupContextType value = (PushMessageContentGroupContextType)[input readEnum];
        if (PushMessageContentGroupContextTypeIsValidValue(value)) {
          [self setType:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 26: {
        [self setName:[input readString]];
        break;
      }
      case 34: {
        [self addMembers:[input readString]];
        break;
      }
      case 42: {
        PushMessageContentAttachmentPointerBuilder* subBuilder = [PushMessageContentAttachmentPointer builder];
        if (self.hasAvatar) {
          [subBuilder mergeFrom:self.avatar];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setAvatar:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return result.hasId;
}
- (NSData*) id {
  return result.id;
}
- (PushMessageContentGroupContextBuilder*) setId:(NSData*) value {
  result.hasId = YES;
  result.id = value;
  return self;
}
- (PushMessageContentGroupContextBuilder*) clearId {
  result.hasId = NO;
  result.id = [NSData data];
  return self;
}
- (BOOL) hasType {
  return result.hasType;
}
- (PushMessageContentGroupContextType) type {
  return result.type;
}
- (PushMessageContentGroupContextBuilder*) setType:(PushMessageContentGroupContextType) value {
  result.hasType = YES;
  result.type = value;
  return self;
}
- (PushMessageContentGroupContextBuilder*) clearType {
  result.hasType = NO;
  result.type = PushMessageContentGroupContextTypeUnknown;
  return self;
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (PushMessageContentGroupContextBuilder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (PushMessageContentGroupContextBuilder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (NSMutableArray *)members {
  return result.membersArray;
}
- (NSString*)membersAtIndex:(NSUInteger)index {
  return [result membersAtIndex:index];
}
- (PushMessageContentGroupContextBuilder *)addMembers:(NSString*)value {
  if (result.membersArray == nil) {
    result.membersArray = [[NSMutableArray alloc]init];
  }
  [result.membersArray addObject:value];
  return self;
}
- (PushMessageContentGroupContextBuilder *)setMembersArray:(NSArray *)array {
  result.membersArray = [[NSMutableArray alloc] initWithArray:array];
  return self;
}
- (PushMessageContentGroupContextBuilder *)clearMembers {
  result.membersArray = nil;
  return self;
}
- (BOOL) hasAvatar {
  return result.hasAvatar;
}
- (PushMessageContentAttachmentPointer*) avatar {
  return result.avatar;
}
- (PushMessageContentGroupContextBuilder*) setAvatar:(PushMessageContentAttachmentPointer*) value {
  result.hasAvatar = YES;
  result.avatar = value;
  return self;
}
- (PushMessageContentGroupContextBuilder*) setAvatarBuilder:(PushMessageContentAttachmentPointerBuilder*) builderForValue {
  return [self setAvatar:[builderForValue build]];
}
- (PushMessageContentGroupContextBuilder*) mergeAvatar:(PushMessageContentAttachmentPointer*) value {
  if (result.hasAvatar &&
      result.avatar != [PushMessageContentAttachmentPointer defaultInstance]) {
    result.avatar =
      [[[PushMessageContentAttachmentPointer builderWithPrototype:result.avatar] mergeFrom:value] buildPartial];
  } else {
    result.avatar = value;
  }
  result.hasAvatar = YES;
  return self;
}
- (PushMessageContentGroupContextBuilder*) clearAvatar {
  result.hasAvatar = NO;
  result.avatar = [PushMessageContentAttachmentPointer defaultInstance];
  return self;
}
@end

@interface PushMessageContentBuilder()
@property (strong) PushMessageContent* result;
@end

@implementation PushMessageContentBuilder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[PushMessageContent alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PushMessageContentBuilder*) clear {
  self.result = [[PushMessageContent alloc] init];
  return self;
}
- (PushMessageContentBuilder*) clone {
  return [PushMessageContent builderWithPrototype:result];
}
- (PushMessageContent*) defaultInstance {
  return [PushMessageContent defaultInstance];
}
- (PushMessageContent*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PushMessageContent*) buildPartial {
  PushMessageContent* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (PushMessageContentBuilder*) mergeFrom:(PushMessageContent*) other {
  if (other == [PushMessageContent defaultInstance]) {
    return self;
  }
  if (other.hasBody) {
    [self setBody:other.body];
  }
  if (other.attachmentsArray.count > 0) {
    if (result.attachmentsArray == nil) {
      result.attachmentsArray = [[NSMutableArray alloc] initWithArray:other.attachmentsArray];
    } else {
      [result.attachmentsArray addObjectsFromArray:other.attachmentsArray];
    }
  }
  if (other.hasGroup) {
    [self mergeGroup:other.group];
  }
  if (other.hasFlags) {
    [self setFlags:other.flags];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PushMessageContentBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PushMessageContentBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setBody:[input readString]];
        break;
      }
      case 18: {
        PushMessageContentAttachmentPointerBuilder* subBuilder = [PushMessageContentAttachmentPointer builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addAttachments:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        PushMessageContentGroupContextBuilder* subBuilder = [PushMessageContentGroupContext builder];
        if (self.hasGroup) {
          [subBuilder mergeFrom:self.group];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setGroup:[subBuilder buildPartial]];
        break;
      }
      case 32: {
        [self setFlags:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasBody {
  return result.hasBody;
}
- (NSString*) body {
  return result.body;
}
- (PushMessageContentBuilder*) setBody:(NSString*) value {
  result.hasBody = YES;
  result.body = value;
  return self;
}
- (PushMessageContentBuilder*) clearBody {
  result.hasBody = NO;
  result.body = @"";
  return self;
}
- (NSMutableArray *)attachments {
  return result.attachmentsArray;
}
- (PushMessageContentAttachmentPointer*)attachmentsAtIndex:(NSUInteger)index {
  return [result attachmentsAtIndex:index];
}
- (PushMessageContentBuilder *)addAttachments:(PushMessageContentAttachmentPointer*)value {
  if (result.attachmentsArray == nil) {
    result.attachmentsArray = [[NSMutableArray alloc]init];
  }
  [result.attachmentsArray addObject:value];
  return self;
}
- (PushMessageContentBuilder *)setAttachmentsArray:(NSArray *)array {
  result.attachmentsArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (PushMessageContentBuilder *)clearAttachments {
  result.attachmentsArray = nil;
  return self;
}
- (BOOL) hasGroup {
  return result.hasGroup;
}
- (PushMessageContentGroupContext*) group {
  return result.group;
}
- (PushMessageContentBuilder*) setGroup:(PushMessageContentGroupContext*) value {
  result.hasGroup = YES;
  result.group = value;
  return self;
}
- (PushMessageContentBuilder*) setGroupBuilder:(PushMessageContentGroupContextBuilder*) builderForValue {
  return [self setGroup:[builderForValue build]];
}
- (PushMessageContentBuilder*) mergeGroup:(PushMessageContentGroupContext*) value {
  if (result.hasGroup &&
      result.group != [PushMessageContentGroupContext defaultInstance]) {
    result.group =
      [[[PushMessageContentGroupContext builderWithPrototype:result.group] mergeFrom:value] buildPartial];
  } else {
    result.group = value;
  }
  result.hasGroup = YES;
  return self;
}
- (PushMessageContentBuilder*) clearGroup {
  result.hasGroup = NO;
  result.group = [PushMessageContentGroupContext defaultInstance];
  return self;
}
- (BOOL) hasFlags {
  return result.hasFlags;
}
- (UInt32) flags {
  return result.flags;
}
- (PushMessageContentBuilder*) setFlags:(UInt32) value {
  result.hasFlags = YES;
  result.flags = value;
  return self;
}
- (PushMessageContentBuilder*) clearFlags {
  result.hasFlags = NO;
  result.flags = 0;
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
